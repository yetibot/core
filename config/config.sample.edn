;; Sample of immutable Yetibot configuration.
;; This is equivalent to profiles.sample.clj.
;; Keys must not have "-" in them in order to remain compatible with multiple
;; forms of configuration.
{:yetibot
 {:features {:github {:user "", :token ""}},
  :wolfram {:appid ""},
  :github {:endpoint "", :org ["" ""], :token ""},
  :google {:api {:key ""}
           :custom {:search {:engine {:id ""}}}
           :options {:safe "high"}}
  :db {:url "postgresql://localhost:5432/yetibot"
       :table {:prefix "yetibot_"}},
  :history {:disabled "false"},
  :twitter {:search {:lang "en"},
            :consumer {:secret "", :key ""},
            :secret "",
            :token ""},
  :mail {:from "", :bcc "", :host "", :user "", :pass ""},
  :alphavantage {:key ""}
  :jira {:default {:project {:key "Optional"}, :issue {:type {:id "3"}}},
         :user "",
         :projects [{:default {:version {:id "42"}}, :key "FOO"}],
         :subtask {:issue {:type {:id "27"}}},
         :domain "",
         :password ""
         :cloud "true"},
  :monitoring {:host "" :port 5555 :interval 10}
  ;; the keys in adapters can be named anything you like so long as they do not
  ;; container "-" and are globally unique.
  :adapters {:myteam {:type "slack",
                      :token "xoxb-111111111111111111111111111111111111"}
             :k8s {:type "slack",
                   :token "xoxb-9999999999999999"}
             :freenode {:type "irc",
                        :username "yetibot",
                        :host "chat.freenode.net",
                        :port "7070",
                        :ssl "true"}
             :mymattermost {:type "mattermost"
                            :host "yetibot-mattermost.herokuapp.com"
                            :token "h1111111111111111111111111"
                            :secure "true" ;; true by default
                            }},
  :ssh {:groups
        [{:user "",
          :servers [{:host "", :name ""} {:host "", :name ""}],
          :key "path-to-key"}]},
  :url "http://localhost:3003",
  :ebay {:appid ""},
  :giphy {:key ""},
  :weather {:wunderground {:key "" :default {:zip ""}}},
  :command {:prefix "!"
            ;; Whether or not embedded commands should be globally available
            ;; (enabled by default)
            :embedded {:enabled "false"}
            ;; Whether to enable having a fallback command. Default is true.
            :fallback {:enabled "true"
                       ;; Override the default fallback help text. Default is
                       ;; empty.
                       :help {:text "Welcome to Yetibot ðŸ‘‹"}}

            ;; Whitelists and blackists: these can be used to enable/disable
            ;; specific commands. Only one of these must be specified. If both
            ;; are specified, it is considered an error and will crash Yetibot
            ;; on startup. By default there is no whitelist or blacklist.
            ;;
            ;; Whitelist: when whitelist is specified, all commands are disabled
            ;; except those present in the `whitelist` collection. Example:
            ;;
            ;; :whitelist ["echo" "list"]
            ;;
            ;; Blacklist: when blacklist is specified, all commands are enabled
            ;; except those present in the `blacklist` collection. Example:
            ;;
            ;; :blackist ["echo" "list"]
            }
  ;; the default command to fall back to if no other commands match
  :default {:command "giphy"}
  :jenkins {:cache {:ttl "3600000"},
            :default {:job ""}
            :instances
            [{:user "jenkins-user",
              :name "yetibot",
              :apikey "abc",
              :uri "http://yetibot/",
              :default {:job "default-job-name"}}
             {:name "yetibot.core"
              :uri "http://yetibot.core/"}]},
  :endpoint "http://my-yetibot.com",
  :log {:level "debug"
        :path "/var/log/yetibot/yetibot.log"},
  :s3 {:secret {:key ""},
       :access {:key ""}},
  :wordnik {:key ""},
  :imgflip {:username "", :password ""},
  :admin {:commands ["observer" "obs"]
          :users ["U123123" "~awesomeperson"]},
  :nrepl {:port ""}
  :karma {:emoji {:positive ":taco:" :negative ":poop:"}}}}
